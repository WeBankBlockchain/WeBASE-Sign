<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webank.webase.sign.api.dao.UserDao">
  <update id="createTbUser">
    CREATE TABLE IF NOT EXISTS tb_user (
        user_id int(11) NOT NULL AUTO_INCREMENT COMMENT '用户编号',
        sign_user_id varchar(64) NOT NULL COMMENT '用户唯一的业务编号',
        app_id varchar(64) NOT NULL COMMENT '用户对应的应用编号',
        address varchar(64) NOT NULL COMMENT '用户地址',
        public_key varchar(256) NOT NULL COMMENT '公钥',
        private_key varchar(256) NOT NULL COMMENT '私钥',
        description varchar(128) DEFAULT NULL COMMENT '描述',
        encrypt_type int NOT NULL COMMENT '加密类型，1：国密；0：ECDSA',
        gmt_create datetime DEFAULT NULL COMMENT '创建时间',
        gmt_modify datetime DEFAULT NULL COMMENT '修改时间',
        status char(1)  NOT NULL DEFAULT '1' COMMENT  '状态： 1 有效 0 无效',
        PRIMARY KEY (user_id),
        UNIQUE KEY unique_uuid (sign_user_id)
    ) ENGINE=InnoDB AUTO_INCREMENT=100001 DEFAULT CHARSET=utf8 COMMENT='用户信息表';
  </update>

  <sql id="USER_COLUMN">
        user_id as userId,
        sign_user_id as signUserId,
        app_id as appId,
        address,
        public_key as publicKey,
        private_key as privateKey,
        description,
        status,
        encrypt_type as encryptType,
        gmt_modify as gmtModify
    </sql>

  <insert id="insertUserInfo" parameterType="com.webank.webase.sign.pojo.po.UserInfoPo">
    <selectKey keyProperty="userId" resultType="java.lang.Integer">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_user(
    `sign_user_id`,
    `app_id`,
    `address`,
    `public_key`,
    `private_key`,
    `description`,
    `encrypt_type`,
    `gmt_create`,
    `gmt_modify`
    ) values (
    #{signUserId},
    #{appId},
    #{address},
    #{publicKey},
    #{privateKey},
    #{description},
    #{encryptType},
    NOW(),
    NOW()
    )
  </insert>

  <select id="findUserBySignUserId" resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select <include refid="USER_COLUMN"/>
    from tb_user 
    where   sign_user_id = #{signUserId}
  </select>

  <select id="findUserByAddress" resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select <include refid="USER_COLUMN"/>
    from tb_user
    where status ='1' and address = #{address}
  </select>

  <select id="countOfUser" resultType="java.lang.Integer">
    select count(1) from tb_user where 1=1
    <if test="appId != null">
      and app_id = #{appId}
    </if>
  </select>
    
  <select id="findUserList" parameterType="com.webank.webase.sign.pojo.bo.UserParam"
          resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select <include refid="USER_COLUMN"/>
    from tb_user
    where status ='1' and encrypt_type = #{encryptType}
    order by user_id desc
    <if test="start != null and pageSize != null">
      limit #{start},#{pageSize}
    </if>
  </select>


  <select id="findLatestUpdateUser" resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select
    <include refid="USER_COLUMN"/>
    from tb_user
    where status ='0'
    order by gmt_modify desc
      limit 0,1
  </select>

  <select id="findUserListByAppId" parameterType="com.webank.webase.sign.pojo.bo.UserParam"
          resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select <include refid="USER_COLUMN"/>
    from tb_user
    where status ='1' and app_id = #{appId}
    order by user_id desc
    <if test="start != null and pageSize != null">
      limit #{start},#{pageSize}
    </if>
  </select>


  <select id="findUserListByTime" parameterType="map"
          resultType="com.webank.webase.sign.pojo.po.UserInfoPo">
    select <include refid="USER_COLUMN"/>
    from tb_user
    where status ='0' AND
    gmt_modify between #{beginTime} and #{endTime}
  </select>



  <update id="deleteUserBySignUserId" parameterType="java.lang.String">
    UPDATE
    tb_user
    SET
    status = '0',
    gmt_modify = NOW()
    where  sign_user_id = #{signUserId}
  </update>



</mapper>